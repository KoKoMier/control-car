<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\CH32F20x.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\CH32F20x.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Wed Jun 22 17:49:30 2022
<BR><P>
<H3>Maximum Stack Usage =         96 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; USARTx_CFG &rArr; USART_Init &rArr; RCC_GetClocksFreq
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from ch32f20x_it.o(i.BusFault_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[56]">DMA2_Channel10_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[57]">DMA2_Channel11_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[46]">DMA2_Channel5_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[52]">DMA2_Channel6_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[53]">DMA2_Channel7_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[54]">DMA2_Channel8_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[55]">DMA2_Channel9_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from ch32f20x_it.o(i.DebugMon_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from ch32f20x_it.o(i.HardFault_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from ch32f20x_it.o(i.MemManage_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from ch32f20x_it.o(i.NMI_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from ch32f20x_it.o(i.PendSV_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[39]">RNG_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from ch32f20x_it.o(i.SVC_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from ch32f20x_it.o(i.SysTick_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[59]">SystemInit</a> from system_ch32f20x.o(i.SystemInit) referenced from startup_ch32f20x_d8.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[4e]">TIM10_BRK_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[51]">TIM10_CC_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[50]">TIM10_TRG_COM_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[4f]">TIM10_UP_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from ch32f20x_it.o(i.TIM6_IRQHandler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[4a]">TIM9_BRK_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[4d]">TIM9_CC_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[4c]">TIM9_TRG_COM_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[4b]">TIM9_UP_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[47]">UART6_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[48]">UART7_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[49]">UART8_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from ch32f20x_it.o(i.UsageFault_Handler) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_ch32f20x_d8.o(.text) referenced from startup_ch32f20x_d8.o(RESET)
 <LI><a href="#[5a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ch32f20x_d8.o(.text)
 <LI><a href="#[5b]">fputc</a> from debug.o(i.fputc) referenced from printf2.o(i.__0printf$2)
 <LI><a href="#[58]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ab]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ac]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[ad]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[ae]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[af]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Channel10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Channel11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Channel9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM10_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM10_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM10_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM10_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM9_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM9_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM9_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM9_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ch32f20x_d8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b0]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>BASIC_TIM_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, basic_tim.o(i.BASIC_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BASIC_TIM_Init &rArr; BASIC_TIM_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_NVIC_Config
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>Circuit</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, moto.o(i.Circuit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Circuit
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>Encoder_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, encoder.o(i.Encoder_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Encoder_Init &rArr; Encoder_Init4 &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>Encoder_Init1</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, encoder.o(i.Encoder_Init1))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Encoder_Init1 &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICStructInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_EncoderInterfaceConfig
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init
</UL>

<P><STRONG><a name="[72]"></a>Encoder_Init2</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, encoder.o(i.Encoder_Init2))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Encoder_Init2 &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICStructInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_EncoderInterfaceConfig
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init
</UL>

<P><STRONG><a name="[73]"></a>Encoder_Init3</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, encoder.o(i.Encoder_Init3))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Encoder_Init3 &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICStructInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_EncoderInterfaceConfig
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init
</UL>

<P><STRONG><a name="[74]"></a>Encoder_Init4</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, encoder.o(i.Encoder_Init4))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Encoder_Init4 &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICStructInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_EncoderInterfaceConfig
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init
</UL>

<P><STRONG><a name="[76]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, ch32f20x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_CFG
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Toggle_INIT
</UL>

<P><STRONG><a name="[6b]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RightForward
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRight
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorLeft
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorForward
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorBack
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeftForward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Circuit
</UL>

<P><STRONG><a name="[6a]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RightForward
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRight
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorLeft
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorForward
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorBack
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeftForward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Circuit
</UL>

<P><STRONG><a name="[7e]"></a>GPIO_Toggle_INIT</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, moto.o(i.GPIO_Toggle_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Toggle_INIT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>Left</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, moto.o(i.Left))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Left
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>LeftForward</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, moto.o(i.LeftForward))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LeftForward
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>MotorBack</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, moto.o(i.MotorBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MotorBack
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>MotorForward</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, moto.o(i.MotorForward))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MotorForward
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>MotorLeft</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, moto.o(i.MotorLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MotorLeft
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>MotorRight</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, moto.o(i.MotorRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MotorRight
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>MotorStop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, moto.o(i.MotorStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MotorStop
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ch32f20x_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_NVIC_Config
</UL>

<P><STRONG><a name="[67]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ch32f20x_misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_NVIC_Config
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ch32f20x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_CFG
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[94]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ch32f20x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[75]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ch32f20x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_CFG
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Toggle_INIT
</UL>

<P><STRONG><a name="[93]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ch32f20x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[9e]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, ch32f20x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[86]"></a>Right</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, moto.o(i.Right))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Right
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>RightForward</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, moto.o(i.RightForward))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RightForward
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SystemInit</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, system_ch32f20x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(.text)
</UL>
<P><STRONG><a name="[8a]"></a>TIM3_CH3_PWM_Init</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, pwm.o(i.TIM3_CH3_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM3_CH3_PWM_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ch32f20x_it.o(i.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM6_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[64]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
</UL>

<P><STRONG><a name="[92]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[8f]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[7b]"></a>TIM_DeInit</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, ch32f20x_tim.o(i.TIM_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
</UL>

<P><STRONG><a name="[77]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, ch32f20x_tim.o(i.TIM_EncoderInterfaceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_EncoderInterfaceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
</UL>

<P><STRONG><a name="[91]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, ch32f20x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>TIM_ICInit</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ch32f20x_tim.o(i.TIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
</UL>

<P><STRONG><a name="[78]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_ICStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
</UL>

<P><STRONG><a name="[65]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
</UL>

<P><STRONG><a name="[8b]"></a>TIM_OC1Init</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ch32f20x_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[90]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[8c]"></a>TIM_OC2Init</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, ch32f20x_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[8d]"></a>TIM_OC3Init</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, ch32f20x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[8e]"></a>TIM_OC4Init</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ch32f20x_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[6c]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetCompare1))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RightForward
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorStop
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRight
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorLeft
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorForward
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorBack
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeftForward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Circuit
</UL>

<P><STRONG><a name="[6d]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetCompare2))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RightForward
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorStop
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRight
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorLeft
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorForward
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorBack
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeftForward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Circuit
</UL>

<P><STRONG><a name="[6e]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RightForward
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorStop
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRight
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorLeft
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorForward
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorBack
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeftForward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Circuit
</UL>

<P><STRONG><a name="[6f]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetCompare4))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RightForward
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorStop
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRight
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorLeft
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorForward
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorBack
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeftForward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Circuit
</UL>

<P><STRONG><a name="[7a]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
</UL>

<P><STRONG><a name="[96]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetIC1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[98]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetIC2Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[9a]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetIC3Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[9c]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_SetIC4Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[63]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Mode_Config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init3
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init1
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
</UL>

<P><STRONG><a name="[7c]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ch32f20x_tim.o(i.TIM_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init4
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init2
</UL>

<P><STRONG><a name="[a1]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ch32f20x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_CFG
</UL>

<P><STRONG><a name="[a5]"></a>USART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ch32f20x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[a0]"></a>USART_ITConfig</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, ch32f20x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_CFG
</UL>

<P><STRONG><a name="[9d]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, ch32f20x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_CFG
</UL>

<P><STRONG><a name="[a6]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ch32f20x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[a7]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ch32f20x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[9f]"></a>USARTx_CFG</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, usart.o(i.USARTx_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USARTx_CFG &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ch32f20x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ch32f20x_d8.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>__0printf$2</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf2.o(i.__0printf$2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b1]"></a>__1printf$2</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf2.o(i.__0printf$2), UNUSED)

<P><STRONG><a name="[a9]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf2.o(i.__0printf$2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[a4]"></a>fgetc</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, debug.o(i.fgetc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
</UL>

<P><STRONG><a name="[5b]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, debug.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf2.o(i.__0printf$2)
</UL>
<P><STRONG><a name="[a8]"></a>getc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, getc.o(i.getc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getc &rArr; fgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>main</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = main &rArr; USARTx_CFG &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USARTx_CFG
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH3_PWM_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RightForward
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Right
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorStop
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRight
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorLeft
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorForward
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorBack
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LeftForward
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Left
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Toggle_INIT
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Circuit
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[88]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_ch32f20x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[89]"></a>SetSysClockTo72</STRONG> (Thumb, 182 bytes, Stack size 12 bytes, system_ch32f20x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[61]"></a>BASIC_TIM_Mode_Config</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, basic_tim.o(i.BASIC_TIM_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BASIC_TIM_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Init
</UL>

<P><STRONG><a name="[60]"></a>BASIC_TIM_NVIC_Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, basic_tim.o(i.BASIC_TIM_NVIC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BASIC_TIM_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BASIC_TIM_Init
</UL>

<P><STRONG><a name="[95]"></a>TI1_Config</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, ch32f20x_tim.o(i.TI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[97]"></a>TI2_Config</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, ch32f20x_tim.o(i.TI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[99]"></a>TI3_Config</STRONG> (Thumb, 134 bytes, Stack size 20 bytes, ch32f20x_tim.o(i.TI3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[9b]"></a>TI4_Config</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, ch32f20x_tim.o(i.TI4_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI4_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[a3]"></a>_printf_core</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, printf2.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$2
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
